{"ast":null,"code":"var _jsxFileName = \"/Users/abenezermolla/Documents/GitHub/demoapp/frontend/abenFrontend/src/Components/donorPages/browseProjects.js\",\n    _s = $RefreshSig$();\n\n/* Page where users can browse projects\n  In this page, we fetch the current projects from firebase\n  and iterate through them using .map. Like a for loop, \n  everytime we iterate through one project, we render a card for the project\n  and pass the project props into the project components.\n */\nimport React, { useState, useEffect } from 'react';\nimport Typography from \"@mui/material/Typography\";\nimport Stack from \"@mui/material/Stack\";\nimport Paper from \"@mui/material/Paper\";\nimport InputBase from \"@mui/material/InputBase\";\nimport IconButton from \"@mui/material/IconButton\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport ProjectCard from '../sharedComponents/projectCard';\nimport ProjectPage from '../sharedComponents/projectPage';\nimport APIService from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProjectBrowser = props => {\n  _s();\n\n  const [projects, setProjects] = useState([\"\"]);\n  const [queried, setQueried] = useState(false);\n  const [currentProject, setCurrentProject] = useState(null);\n  useEffect(() => {\n    APIService.GetProjects(props.token).then(response => {\n      if (response.status === 200) {\n        return response.data;\n      }\n    }).then(data => setProjects(data.response)).then(error => {\n      if (error) {\n        console.log(error);\n      }\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: currentProject ? /*#__PURE__*/_jsxDEV(ProjectPage, {\n      props: currentProject\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 29\n    }, this) : /*#__PURE__*/_jsxDEV(Stack, {\n      spacing: 2,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h3\",\n        children: \"Find Meaningful Projects\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        children: \"Popular Near You\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Stack, {\n        direction: \"row\",\n        spacing: 3,\n        children: projects.map((project, i) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(ProjectCard, {\n              pk: project[\"id\"],\n              name: project[\"title\"],\n              description: project[\"description\"],\n              raised: project[\"raised_amount\"],\n              target: project[\"target_amount\"],\n              setCurrentProject: setCurrentProject\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 17\n            }, this)\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ProjectBrowser, \"J4EUchxGpdFQwKvFa8vOgcwr+l4=\");\n\n_c = ProjectBrowser;\nexport default ProjectBrowser;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProjectBrowser\");","map":{"version":3,"sources":["/Users/abenezermolla/Documents/GitHub/demoapp/frontend/abenFrontend/src/Components/donorPages/browseProjects.js"],"names":["React","useState","useEffect","Typography","Stack","Paper","InputBase","IconButton","SearchIcon","ProjectCard","ProjectPage","APIService","ProjectBrowser","props","projects","setProjects","queried","setQueried","currentProject","setCurrentProject","GetProjects","token","then","response","status","data","error","console","log","map","project","i"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEE,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,UAAP,MAAuB,4BAAvB;AAEA,OAAOC,WAAP,MAAwB,iCAAxB;AACA,OAAOC,WAAP,MAAwB,iCAAxB;AAEA,OAAOC,UAAP,MAAuB,QAAvB;;;AAGA,MAAMC,cAAc,GAAIC,KAAD,IAAW;AAAA;;AAEhC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,CAAC,CAAC,EAAD,CAAD,CAAxC;AACA,QAAM,CAACe,OAAD,EAAUC,UAAV,IAAwBhB,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACiB,cAAD,EAAiBC,iBAAjB,IAAuClB,QAAQ,CAAC,IAAD,CAArD;AAGAC,EAAAA,SAAS,CAAC,MAAM;AACZS,IAAAA,UAAU,CAACS,WAAX,CAAuBP,KAAK,CAACQ,KAA7B,EACIC,IADJ,CACSC,QAAQ,IAAI;AACjB,UAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,eAAOD,QAAQ,CAACE,IAAhB;AACD;AACF,KALH,EAKKH,IALL,CAKUG,IAAI,IAAIV,WAAW,CAACU,IAAI,CAACF,QAAN,CAL7B,EAMGD,IANH,CAMQI,KAAK,IAAI;AAAC,UAAGA,KAAH,EAAS;AAACC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AAAmB;AAAC,KANhD;AAOC,GARI,EAQF,EARE,CAAT;AAWA,sBACI;AAAA,cACER,cAAD,gBAAmB,QAAC,WAAD;AAAa,MAAA,KAAK,EAAEA;AAApB;AAAA;AAAA;AAAA;AAAA,YAAnB,gBAEC,QAAC,KAAD;AAAO,MAAA,OAAO,EAAE,CAAhB;AAAA,8BACA,QAAC,UAAD;AAAY,QAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAEA,QAAC,UAAD;AAAY,QAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFA,eAGA,QAAC,KAAD;AAAO,QAAA,SAAS,EAAC,KAAjB;AAAuB,QAAA,OAAO,EAAE,CAAhC;AAAA,kBACGJ,QAAQ,CAACe,GAAT,CAAa,CAACC,OAAD,EAAUC,CAAV,KAAgB;AAC5B,8BACE;AAAA,mCACA,QAAC,WAAD;AACE,cAAA,EAAE,EAAED,OAAO,CAAC,IAAD,CADb;AAEE,cAAA,IAAI,EAAEA,OAAO,CAAC,OAAD,CAFf;AAGE,cAAA,WAAW,EAAEA,OAAO,CAAC,aAAD,CAHtB;AAIE,cAAA,MAAM,EAAEA,OAAO,CAAC,eAAD,CAJjB;AAKE,cAAA,MAAM,EAAEA,OAAO,CAAC,eAAD,CALjB;AAME,cAAA,iBAAiB,EAAEX;AANrB;AAAA;AAAA;AAAA;AAAA;AADA,aAAUY,CAAV;AAAA;AAAA;AAAA;AAAA,kBADF;AAYD,SAbA;AADH;AAAA;AAAA;AAAA;AAAA,cAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHF;AAAA;AAAA;AAAA;AAAA,UADJ;AA6BD,CA/CD;;GAAMnB,c;;KAAAA,c;AAiDN,eAAeA,cAAf","sourcesContent":["/* Page where users can browse projects\n  In this page, we fetch the current projects from firebase\n  and iterate through them using .map. Like a for loop, \n  everytime we iterate through one project, we render a card for the project\n  and pass the project props into the project components.\n */\n\n  import React, { useState, useEffect } from 'react';\n\n  import Typography from \"@mui/material/Typography\";\n  import Stack from \"@mui/material/Stack\";\n  import Paper from \"@mui/material/Paper\";\n  import InputBase from \"@mui/material/InputBase\";\n  import IconButton from \"@mui/material/IconButton\";\n  import SearchIcon from \"@mui/icons-material/Search\";\n\n  import ProjectCard from '../sharedComponents/projectCard';  \n  import ProjectPage from '../sharedComponents/projectPage';  \n\n  import APIService from '../api';\n\n  \n  const ProjectBrowser = (props) => {\n  \n    const [projects, setProjects] = useState([\"\"]);\n    const [queried, setQueried] = useState(false);\n    const [currentProject, setCurrentProject]  = useState(null);\n  \n\n    useEffect(() => {\n        APIService.GetProjects(props.token\n          ).then(response => {\n            if (response.status === 200) {\n              return response.data\n            }\n          }).then(data => setProjects(data.response))\n          .then(error => {if(error){console.log(error)}})\n        }, []\n    )\n    \n    return (\n        <div>\n        {(currentProject) ? <ProjectPage props={currentProject}/>\n        :\n          <Stack spacing={2}>\n          <Typography variant=\"h3\">Find Meaningful Projects</Typography>\n          <Typography variant=\"h4\">Popular Near You</Typography>\n          <Stack direction=\"row\" spacing={3}>\n            {projects.map((project, i) => {\n              return(\n                <div key={i}>\n                <ProjectCard\n                  pk={project[\"id\"]}\n                  name={project[\"title\"]}\n                  description={project[\"description\"]}\n                  raised={project[\"raised_amount\"]}\n                  target={project[\"target_amount\"]}\n                  setCurrentProject={setCurrentProject}\n                />\n              </div>\n              )\n            })\n            }\n          </Stack>\n        \n          </Stack>\n        }\n    </div>\n    )\n  }\n  \n  export default ProjectBrowser;"]},"metadata":{},"sourceType":"module"}