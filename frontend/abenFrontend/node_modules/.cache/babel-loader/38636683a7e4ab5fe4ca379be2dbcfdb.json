{"ast":null,"code":"var _jsxFileName = \"/Users/abenezermolla/Documents/GitHub/demoapp/frontend/abenFrontend/src/Components/SignUpDonor.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Card, Form, Button, Alert } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { useForm } from 'react-hook-form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst SignUpDonor = props => {\n  _s();\n\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: {\n      errors\n    }\n  } = useForm();\n  const [show, setShow] = useState(false);\n  const [serverResponse, setServerResponse] = useState('');\n\n  const submitForm = data => {\n    console.log(data);\n\n    if (data.password === data.confirmpassword) {\n      const body = {\n        username: data.username,\n        email: data.email,\n        password: data.password\n      };\n      const requestOptions = {\n        method: \"POST\",\n        headers: {\n          'content-type': 'application/json'\n        },\n        body: JSON.stringify(body)\n      };\n      fetch('/auth/signupdonor', requestOptions).then(res => res.json()).then(data => {\n        props.setToken(data.access_token);\n        console.log(data);\n        setServerResponse(data.message);\n        setShow(true);\n      }).catch(err => console.log(err));\n      reset();\n    } else {\n      alert(\"Passwords do not match\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"success\",\n      onClose: () => {\n        setShow(false);\n      },\n      dismissible: true,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: serverResponse\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-center mb-4 \",\n          children: \" Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            id: \"username\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"username\",\n              placeholder: \"username\",\n              name: \"username\",\n              ...register(\"username\", {\n                required: true\n              }),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            id: \"email\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"email\",\n              placeholder: \"Email\",\n              name: \"email\",\n              ...register(\"email\", {\n                required: true\n              }),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            id: \"password\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"password\",\n              placeholder: \"Password\",\n              name: \"password\",\n              ...register(\"password\", {\n                required: true\n              }),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            id: \"passwordconfirm\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Password Confirmation\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"password\",\n              placeholder: \" Confirm Password\",\n              name: \"confirmpassword\",\n              ...register(\"confirmpassword\", {\n                required: true\n              }),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleSubmit(submitForm),\n            className: \"w-100\",\n            type: \"submit\",\n            children: \"Sign Up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n\n_s(SignUpDonor, \"O2Er5TlBAzXNf0jC92t+jqkH3Pk=\", false, function () {\n  return [useForm];\n});\n\n_c = SignUpDonor;\nexport default SignUpDonor;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUpDonor\");","map":{"version":3,"sources":["/Users/abenezermolla/Documents/GitHub/demoapp/frontend/abenFrontend/src/Components/SignUpDonor.js"],"names":["React","useState","Card","Form","Button","Alert","Link","useForm","SignUpDonor","props","register","handleSubmit","reset","formState","errors","show","setShow","serverResponse","setServerResponse","submitForm","data","console","log","password","confirmpassword","body","username","email","requestOptions","method","headers","JSON","stringify","fetch","then","res","json","setToken","access_token","message","catch","err","alert","required"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { Card, Form, Button, Alert } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport { useForm } from 'react-hook-form'\n\n\nconst SignUpDonor = (props) => {\n\n\n    const { register, handleSubmit, reset, formState: { errors } } = useForm();\n    const [show,setShow]=useState(false)\n    const [serverResponse,setServerResponse]=useState('')\n\n    const submitForm = (data) => {\n\n        console.log(data)\n\n\n        if (data.password === data.confirmpassword) {\n\n\n            const body = {\n                username: data.username,\n                email: data.email,\n                password: data.password\n            }\n\n            const requestOptions = {\n                method: \"POST\",\n                headers: {\n                    'content-type': 'application/json'\n                },\n                body: JSON.stringify(body)\n            }\n\n\n            fetch('/auth/signupdonor', requestOptions)\n                .then(res => res.json())\n                .then(data =>{\n                    props.setToken(data.access_token) \n                    console.log(data)\n                    setServerResponse(data.message)\n                    setShow(true)\n                })\n                .catch(err => console.log(err))\n\n            reset()\n        }\n\n        else {\n            alert(\"Passwords do not match\")\n        }\n\n\n    } \n\n  return (\n\n    <>\n    <Alert variant=\"success\" onClose={() => {setShow(false)\n                }} dismissible>\n        <p>\n            {serverResponse}\n        </p>\n    </Alert>\n\n  \n\n    <Card>\n        <Card.Body>\n            <h2 className = \"text-center mb-4 \"> Sign Up</h2>\n            <Form>\n                <Form.Group id = \"username\">\n                    <Form.Label>Username</Form.Label>\n                    <Form.Control \n                    type = \"username\" \n                    placeholder='username'  \n                    \n                    name = \"username\" \n                    {...register(\"username\", { required: true})}\n                    required\n                    />\n                </Form.Group>\n                <Form.Group id = \"email\">\n                    <Form.Label>Email</Form.Label>\n                    <Form.Control \n                    type = \"email\" \n                    placeholder='Email'  \n                    \n                    name = \"email\" \n                    {...register(\"email\", { required: true})}\n                    required\n                    />\n                </Form.Group>\n\n                <Form.Group id = \"password\">\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control \n                    type = \"password\" \n                    placeholder='Password'  \n                      \n                    name = \"password\"\n                    {...register(\"password\", { required: true})}\n                    required\n                    />\n                </Form.Group>\n\n                <Form.Group id = \"passwordconfirm\">\n                    <Form.Label>Password Confirmation</Form.Label>\n                    <Form.Control \n                    type = \"password\" \n                    placeholder=' Confirm Password'  \n                     \n                    name = \"confirmpassword\" \n                    {...register(\"confirmpassword\", { required: true})}\n                    required\n                    />\n                </Form.Group>\n                <br/>\n                <Button onClick = {handleSubmit(submitForm)} className = \"w-100\" type  = \"submit\" >Sign Up</Button>\n            </Form>\n        </Card.Body>\n    </Card>\n\n\n    \n    </>\n    \n  )\n}\n\nexport default SignUpDonor"]},"metadata":{},"sourceType":"module"}