{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bhuee\\\\OneDrive\\\\Desktop\\\\____\\\\demoapp\\\\frontend\\\\src\\\\components\\\\charityPages\\\\browseProjects.js\",\n    _s = $RefreshSig$();\n\n/* Page where users can browse projects\r\n  In this page, we fetch the current projects from firebase\r\n  and iterate through them using .map. Like a for loop, \r\n  everytime we iterate through one project, we render a card for the project\r\n  and pass the project props into the project components.\r\n */\nimport React, { useState, useEffect } from 'react';\nimport Modal from \"@mui/material/Modal\";\nimport Typography from \"@mui/material/Typography\";\nimport Stack from \"@mui/material/Stack\";\nimport Paper from \"@mui/material/Paper\";\nimport InputBase from \"@mui/material/InputBase\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Button from \"@mui/material/Button\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport ProjectCard from '../sharedComponents/projectCard';\nimport ProjectPage from '../sharedComponents/projectPage';\nimport APIService from '../api';\nimport AddProjectForm from './addProjectForm';\nimport CloseIcon from '@mui/icons-material/Close';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProjectBrowser = props => {\n  _s();\n\n  const style = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: '20%',\n    height: '50%',\n    overflowY: 'scroll',\n    scrollBehavior: 'smooth',\n    bgcolor: 'background.paper',\n    border: '2px solid #000',\n    boxShadow: 24,\n    p: 4\n  };\n  const [projects, setProjects] = useState([\"\"]);\n  const [queried, setQueried] = useState(false);\n  const [currentProject, setCurrentProject] = useState(null);\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [goal, setGoal] = useState('');\n  const [deadline, setDeadline] = useState('');\n  const [targetAmount, setTargetAmount] = useState('');\n  const [raisedAmount, setRaisedAmount] = useState('');\n  const [image_url, setImageUrl] = useState('');\n  const [openM2, setOpenM2] = useState(false);\n\n  const handleOpenM2 = () => {\n    setOpenM2(true);\n  };\n\n  const handleClose = () => {\n    setOpenM2(false);\n  };\n\n  const addProject = () => {\n    APIService.AddProject({\n      title,\n      description,\n      image_url,\n      goal,\n      // deadline,\n      targetAmount\n    }, props.token).then(response => console.log(response)).catch(error => console.log('error', error));\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    addProject();\n    setOpenM2(false);\n    window.location.reload();\n  };\n\n  useEffect(() => {\n    APIService.GetProjects(props.token).then(response => {\n      if (response.status === 200) {\n        return response.data;\n      }\n    }).then(data => setProjects(data.response)).then(error => {\n      if (error) {\n        console.log(error);\n      }\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: currentProject ? /*#__PURE__*/_jsxDEV(ProjectPage, {\n      props: currentProject\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 29\n    }, this) : /*#__PURE__*/_jsxDEV(Stack, {\n      spacing: 2,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h3\",\n        children: \"Find Meaningful Projects\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        children: \"Popular Near You\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleOpenM2,\n        children: \"Add A Project\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        sx: style,\n        open: openM2,\n        \"aria-labelledby\": \"modal-modal-title\",\n        \"aria-describedby\": \"modal-modal-description\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Stack, {\n            spacing: 2,\n            sx: {\n              justifyContent: 'space-between'\n            },\n            direction: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: handleSubmit,\n              children: /*#__PURE__*/_jsxDEV(Stack, {\n                spacing: 1,\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"title\",\n                  className: \"form-label\",\n                  children: \"Title\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 117,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  className: \"form-control\",\n                  placeholder: \"Enter title\",\n                  value: title,\n                  onChange: e => setTitle(e.target.value),\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 118,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"description\",\n                  className: \"form-label\",\n                  children: \"Description\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 126,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                  className: \"form-control\",\n                  placeholder: \"Enter Description\",\n                  rows: \"6\",\n                  value: description,\n                  onChange: e => setDescription(e.target.value),\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 127,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"image_url\",\n                  className: \"form-label\",\n                  children: \"Goal\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 135,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                  className: \"form-control\",\n                  placeholder: \"Image Url\",\n                  value: image_url,\n                  onChange: e => setImageUrl(e.target.value),\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 136,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"deadline\",\n                  className: \"form-label\",\n                  children: \"Deadline\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 143,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"datetime-local\",\n                  className: \"form-control\",\n                  value: deadline,\n                  onChange: e => setDeadline(e.target.value),\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 144,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"targetAmount\",\n                  className: \"form-label\",\n                  children: \"Target Amount\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 151,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  className: \"form-control\",\n                  placeholder: \"Enter your target amount\",\n                  value: targetAmount,\n                  onChange: e => setTargetAmount(e.target.value),\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 152,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: handleSubmit,\n                  children: \" Create project \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 169,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(CloseIcon, {\n              onClick: handleClose\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Stack, {\n        direction: \"row\",\n        spacing: 3,\n        children: projects.map((project, i) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(ProjectCard, {\n              pk: project[\"id\"],\n              name: project[\"title\"],\n              description: project[\"description\"],\n              target: project[\"target_amount\"],\n              raised: project[\"raised_amount\"],\n              image_url: project['image_url'],\n              setCurrentProject: setCurrentProject\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 17\n            }, this)\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ProjectBrowser, \"4dMsdp4TKNlrSRimlrY31ou0MQI=\");\n\n_c = ProjectBrowser;\nexport default ProjectBrowser;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProjectBrowser\");","map":{"version":3,"sources":["C:/Users/bhuee/OneDrive/Desktop/____/demoapp/frontend/src/components/charityPages/browseProjects.js"],"names":["React","useState","useEffect","Modal","Typography","Stack","Paper","InputBase","IconButton","Button","SearchIcon","ProjectCard","ProjectPage","APIService","AddProjectForm","CloseIcon","ProjectBrowser","props","style","position","top","left","transform","width","height","overflowY","scrollBehavior","bgcolor","border","boxShadow","p","projects","setProjects","queried","setQueried","currentProject","setCurrentProject","title","setTitle","description","setDescription","goal","setGoal","deadline","setDeadline","targetAmount","setTargetAmount","raisedAmount","setRaisedAmount","image_url","setImageUrl","openM2","setOpenM2","handleOpenM2","handleClose","addProject","AddProject","token","then","response","console","log","catch","error","handleSubmit","event","preventDefault","window","location","reload","GetProjects","status","data","justifyContent","e","target","value","map","project","i"],"mappings":"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","sourcesContent":["/* Page where users can browse projects\r\n  In this page, we fetch the current projects from firebase\r\n  and iterate through them using .map. Like a for loop, \r\n  everytime we iterate through one project, we render a card for the project\r\n  and pass the project props into the project components.\r\n */\r\n\r\n  import React, { useState, useEffect } from 'react';\r\n\r\n  import Modal from \"@mui/material/Modal\";\r\n  import Typography from \"@mui/material/Typography\";\r\n  import Stack from \"@mui/material/Stack\";\r\n  import Paper from \"@mui/material/Paper\";\r\n  import InputBase from \"@mui/material/InputBase\";\r\n  import IconButton from \"@mui/material/IconButton\";\r\n  import Button from \"@mui/material/Button\";\r\n  import SearchIcon from \"@mui/icons-material/Search\";\r\n\r\n  import ProjectCard from '../sharedComponents/projectCard';  \r\n  import ProjectPage from '../sharedComponents/projectPage';  \r\n\r\n  import APIService from '../api';\r\n  import AddProjectForm from './addProjectForm';\r\n  import CloseIcon from '@mui/icons-material/Close';\r\n\r\n  \r\n  const ProjectBrowser = (props) => {\r\n  \r\n    const style = {\r\n      position: 'absolute',\r\n      top: '50%',\r\n      left: '50%',\r\n      transform: 'translate(-50%, -50%)',\r\n      width: '20%',\r\n      height: '50%',\r\n      overflowY: 'scroll',\r\n      scrollBehavior: 'smooth',\r\n      bgcolor: 'background.paper',\r\n      border: '2px solid #000',\r\n      boxShadow: 24,\r\n      p: 4,\r\n    };\r\n\r\n    const [projects, setProjects] = useState([\"\"]);\r\n    const [queried, setQueried] = useState(false);\r\n    const [currentProject, setCurrentProject]  = useState(null);\r\n    \r\n    const [title, setTitle] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [goal, setGoal] = useState('');\r\n    const [deadline, setDeadline] = useState('');\r\n    const [targetAmount, setTargetAmount] = useState('');\r\n    const [raisedAmount, setRaisedAmount] = useState('');\r\n    const [image_url, setImageUrl] = useState('');\r\n\r\n\r\n    const [openM2, setOpenM2] = useState(false);\r\n  \r\n    const handleOpenM2 = () => {\r\n      setOpenM2(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n      setOpenM2(false);\r\n    };\r\n\r\n    const addProject = () => {\r\n      APIService.AddProject({\r\n            title,\r\n            description,\r\n            image_url,\r\n            goal,\r\n            // deadline,\r\n            targetAmount\r\n        }, props.token\r\n        ).then((response) => console.log(response))\r\n        .catch(error => console.log('error',error))\r\n    }\r\n    \r\n    const handleSubmit=(event)=>{ \r\n      event.preventDefault()\r\n      addProject()\r\n      setOpenM2(false);\r\n      window.location.reload()\r\n    }\r\n\r\n    useEffect(() => {\r\n        APIService.GetProjects(props.token\r\n          ).then(response => {\r\n            if (response.status === 200) {\r\n              return response.data\r\n            }\r\n          }).then(data => setProjects(data.response))\r\n          .then(error => {if(error){console.log(error)}})\r\n        }, []\r\n    )\r\n    \r\n    return (\r\n        <div>\r\n        {(currentProject) ? <ProjectPage props={currentProject}/>\r\n        :\r\n          <Stack spacing={2}>\r\n          <Typography variant=\"h3\">Find Meaningful Projects</Typography>\r\n          <Typography variant=\"h4\">Popular Near You</Typography>\r\n          <Button onClick = {handleOpenM2}>Add A Project</Button>\r\n\r\n          <Modal\r\n            sx= {style}\r\n            open={openM2}\r\n            aria-labelledby=\"modal-modal-title\"\r\n            aria-describedby=\"modal-modal-description\"\r\n          >\r\n          <div>\r\n          <Stack spacing = {2} sx ={{justifyContent: 'space-between'}} direction ='row'>\r\n          <form onSubmit = {handleSubmit} >\r\n              <Stack spacing ={1}>\r\n                <label htmlFor=\"title\" className=\"form-label\">Title</label>\r\n                <input \r\n                    type=\"text\"\r\n                    className=\"form-control\" \r\n                    placeholder =\"Enter title\"\r\n                    value={title}\r\n                    onChange={(e)=>setTitle(e.target.value)}\r\n                    required />\r\n\r\n                <label htmlFor=\"description\" className=\"form-label\">Description</label>\r\n                <textarea \r\n                    className=\"form-control\" \r\n                    placeholder =\"Enter Description\" \r\n                    rows='6'\r\n                    value={description}\r\n                    onChange={(e)=>setDescription(e.target.value)}\r\n                    required></textarea>\r\n\r\n                <label htmlFor=\"image_url\" className=\"form-label\">Goal</label>\r\n                <textarea \r\n                    className=\"form-control\" \r\n                    placeholder =\"Image Url\" \r\n                    value={image_url}\r\n                    onChange={(e)=>setImageUrl(e.target.value)}\r\n                    required></textarea>\r\n\r\n                <label htmlFor=\"deadline\" className=\"form-label\">Deadline</label>\r\n                <input \r\n                    type=\"datetime-local\"\r\n                    className=\"form-control\" \r\n                    value={deadline}\r\n                    onChange={(e)=>setDeadline(e.target.value)}\r\n                    required />\r\n\r\n                <label htmlFor=\"targetAmount\" className=\"form-label\">Target Amount</label>\r\n                <input \r\n                    type=\"number\"\r\n                    className=\"form-control\" \r\n                    placeholder =\"Enter your target amount\"\r\n                    value={targetAmount}\r\n                    onChange={(e)=>setTargetAmount(e.target.value)}\r\n                    required />\r\n\r\n                {/* <label htmlFor=\"raisedAmount\" className=\"form-label\">Raised Amount</label>\r\n                <input \r\n                    type=\"number\"\r\n                    className=\"form-control\" \r\n                    placeholder =\"Enter Your Riased Amount\"\r\n                    value={raisedAmount}\r\n                    onChange={(e)=>setRaisedAmount(e.target.value)}\r\n                    required /> */}\r\n\r\n                <button onClick={handleSubmit}> Create project </button>\r\n                </Stack>\r\n                </form>\r\n          \r\n          <CloseIcon onClick={handleClose}></CloseIcon>\r\n          </Stack>\r\n          </div>\r\n          \r\n          </Modal>\r\n\r\n          <Stack direction=\"row\" spacing={3}>\r\n            {projects.map((project, i) => {\r\n              return(\r\n                <div key={i}>\r\n                <ProjectCard\r\n                  pk={project[\"id\"]}\r\n                  name={project[\"title\"]}\r\n                  description={project[\"description\"]}\r\n                  target={project[\"target_amount\"]}\r\n                  raised = {project[\"raised_amount\"]}\r\n                  image_url = {project['image_url']}\r\n                  setCurrentProject={setCurrentProject}\r\n                />\r\n              </div>\r\n              )\r\n            })\r\n            }\r\n          </Stack>\r\n        \r\n          </Stack>\r\n        }\r\n    </div>\r\n    )\r\n  }\r\n  \r\n  export default ProjectBrowser;"]},"metadata":{},"sourceType":"module"}